import "dotenv/config";
import { z } from "zod";
export type EnvVarsSchemaType = z.infer<typeof envVarsSchema>;
declare const envVarsSchema: z.ZodObject<{
    ENV: z.ZodUnion<[z.ZodLiteral<"production">, z.ZodLiteral<"development">, z.ZodLiteral<"test">]>;
    API_PORT: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    HOST: z.ZodOptional<z.ZodString>;
    BASE_URL: z.ZodString;
    DB_NAME: z.ZodString;
    DB_USER: z.ZodString;
    DB_PASSWORD: z.ZodString;
    DB_PORT: z.ZodString;
    ADMIN_EMAIL: z.ZodString;
    ADMIN_PASSWORD: z.ZodString;
    JWT_SECRET: z.ZodString;
    REQUIRE_EMAIL_VERIFICATION: z.ZodOptional<z.ZodBoolean>;
    JWT_ACCESS_EXPIRATION_MINUTES: z.ZodDefault<z.ZodNumber>;
    JWT_REFRESH_EXPIRATION_DAYS: z.ZodDefault<z.ZodNumber>;
    JWT_RESET_PASSWORD_EXPIRATION_MINUTES: z.ZodDefault<z.ZodNumber>;
    JWT_VERIFY_EMAIL_EXPIRATION_MINUTES: z.ZodDefault<z.ZodNumber>;
    LOG_LEVEL: z.ZodDefault<z.ZodUnion<[z.ZodLiteral<"trace">, z.ZodLiteral<"debug">, z.ZodLiteral<"info">, z.ZodLiteral<"warn">, z.ZodLiteral<"error">, z.ZodLiteral<"fatal">]>>;
}, "strip", z.ZodTypeAny, {
    ENV: "production" | "development" | "test";
    API_PORT: number;
    BASE_URL: string;
    DB_NAME: string;
    DB_USER: string;
    DB_PASSWORD: string;
    DB_PORT: string;
    ADMIN_EMAIL: string;
    ADMIN_PASSWORD: string;
    JWT_SECRET: string;
    JWT_ACCESS_EXPIRATION_MINUTES: number;
    JWT_REFRESH_EXPIRATION_DAYS: number;
    JWT_RESET_PASSWORD_EXPIRATION_MINUTES: number;
    JWT_VERIFY_EMAIL_EXPIRATION_MINUTES: number;
    LOG_LEVEL: "trace" | "debug" | "info" | "warn" | "error" | "fatal";
    HOST?: string | undefined;
    REQUIRE_EMAIL_VERIFICATION?: boolean | undefined;
}, {
    ENV: "production" | "development" | "test";
    BASE_URL: string;
    DB_NAME: string;
    DB_USER: string;
    DB_PASSWORD: string;
    DB_PORT: string;
    ADMIN_EMAIL: string;
    ADMIN_PASSWORD: string;
    JWT_SECRET: string;
    API_PORT?: number | undefined;
    HOST?: string | undefined;
    REQUIRE_EMAIL_VERIFICATION?: boolean | undefined;
    JWT_ACCESS_EXPIRATION_MINUTES?: number | undefined;
    JWT_REFRESH_EXPIRATION_DAYS?: number | undefined;
    JWT_RESET_PASSWORD_EXPIRATION_MINUTES?: number | undefined;
    JWT_VERIFY_EMAIL_EXPIRATION_MINUTES?: number | undefined;
    LOG_LEVEL?: "trace" | "debug" | "info" | "warn" | "error" | "fatal" | undefined;
}>;
declare const config: {
    ENV: "production" | "development" | "test";
    API_PORT: number;
    BASE_URL: string;
    DB_NAME: string;
    DB_USER: string;
    DB_PASSWORD: string;
    DB_PORT: string;
    ADMIN_EMAIL: string;
    ADMIN_PASSWORD: string;
    JWT_SECRET: string;
    JWT_ACCESS_EXPIRATION_MINUTES: number;
    JWT_REFRESH_EXPIRATION_DAYS: number;
    JWT_RESET_PASSWORD_EXPIRATION_MINUTES: number;
    JWT_VERIFY_EMAIL_EXPIRATION_MINUTES: number;
    LOG_LEVEL: "trace" | "debug" | "info" | "warn" | "error" | "fatal";
    HOST?: string | undefined;
    REQUIRE_EMAIL_VERIFICATION?: boolean | undefined;
};
export default config;
export declare const DB_URL: string;
